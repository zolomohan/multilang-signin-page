{"version":3,"sources":["hooks/useToggleState.js","contexts/ThemeContext.js","contexts/LanguageContext.js","helpers/words.js","Navbar.js","styles/NavBarStyles.js","Form.js","styles/FormStyles.js","Page.js","helpers/serviceWorker.js","index.js","App.js"],"names":["initialState","useState","state","setState","ThemeContext","createContext","ThemeProvider","children","useToggleState","darkMode","toggleTheme","Provider","value","LanguageContext","LanguageProvider","language","setLanguage","english","email","password","remember","signin","search","emoji","french","spanish","withStyles","theme","root","width","marginBottom","grow","flexGrow","menuButton","marginLeft","marginRight","flag","margin","fontSize","title","display","breakpoints","up","position","borderRadius","shape","backgroundColor","fade","palette","common","white","spacing","searchIcon","height","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","props","classes","useContext","words","className","AppBar","Toolbar","role","Typography","variant","Switch","onClick","InputBase","placeholder","input","main","paper","marginTop","flexDirection","padding","avatar","secondary","form","submit","Paper","Avatar","Select","onChange","event","target","MenuItem","FormControl","required","fullWidth","InputLabel","htmlFor","Input","id","name","type","autoFocus","FormControlLabel","control","Checkbox","label","Button","Page","styles","style","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.383bd773.chunk.js","sourcesContent":["import { useState } from 'react';\r\nexport default (initialState) => {\r\n\tconst [ state, setState ] = useState(initialState);\r\n\tconst toggleState = () => setState(!state);\r\n\treturn [ state, toggleState ];\r\n};\r\n","import React, { createContext } from 'react';\r\nimport useToggleState from '../hooks/useToggleState';\r\n\r\nexport const ThemeContext = createContext();\r\nexport function ThemeProvider({ children }) {\r\n\tconst [ darkMode, toggleTheme ] = useToggleState(false);\r\n\treturn <ThemeContext.Provider value={{ darkMode, toggleTheme }}>{children}</ThemeContext.Provider>;\r\n}\r\n","import React, { createContext, useState } from 'react';\r\nexport const LanguageContext = createContext();\r\n\r\nexport function LanguageProvider({ children }) {\r\n\tconst [ language, setLanguage ] = useState('english');\r\n\treturn <LanguageContext.Provider value={{ language, setLanguage }}>{children}</LanguageContext.Provider>;\r\n}\r\n","export default {\r\n\tenglish : {\r\n\t\temail    : 'Email',\r\n\t\tpassword : 'Password',\r\n\t\tremember : 'Remember Me',\r\n\t\tsignin   : 'Sign In',\r\n\t\tsearch : 'Search',\r\n\t\temoji  : 'ðŸ‡ºðŸ‡¸'\r\n\t},\r\n\tfrench  : {\r\n\t\temail    : 'Addresse Electronique',\r\n\t\tpassword : 'Mot de passe',\r\n\t\tremember : 'Souviens-toi de moi',\r\n\t\tsignin   : 'Se connecter',\r\n\t\tsearch : 'chercher',\r\n\t\temoji  : 'ðŸ‡«ðŸ‡·'\r\n\t},\r\n\tspanish : {\r\n\t\temail    : 'Sorreo electrÃ³nico',\r\n\t\tpassword : 'SontraseÃ±a',\r\n\t\tremember : 'RecuÃ©rdame',\r\n\t\tsignin   : 'Registrarse',\r\n\t\tsearch : 'Buscar',\r\n\t\temoji  : 'ðŸ‡ªðŸ‡¸'\r\n\t}\r\n};","import React, { useContext } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Switch from '@material-ui/core/Switch';\nimport styles from './styles/NavBarStyles';\nimport { ThemeContext } from './contexts/ThemeContext';\nimport { LanguageContext } from './contexts/LanguageContext';\nimport words from './helpers/words';\n\nexport default withStyles(styles)(function Navbar(props) {\n\tconst { classes } = props;\n\tconst { language } = useContext(LanguageContext);\n\tconst { darkMode, toggleTheme } = useContext(ThemeContext);\n\tconst { search, emoji } = words[language];\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar position='static' color={darkMode ? 'primary' : 'default'}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<span role='img' className={classes.flag}>{emoji}</span>\n\t\t\t\t\t<Typography className={classes.title} variant='h6' color='inherit'>\n\t\t\t\t\t\tDark Mode\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Switch onClick={toggleTheme} />\n\t\t\t\t\t<div className={classes.grow} />\n\t\t\t\t\t<div className={classes.search}>\n\t\t\t\t\t\t<div className={classes.searchIcon}>\n\t\t\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<InputBase\n\t\t\t\t\t\t\tplaceholder={search}\n\t\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\t\troot  : classes.inputRoot,\n\t\t\t\t\t\t\t\tinput : classes.inputInput\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t);\n});\n","import { fade } from '@material-ui/core/styles/colorManipulator';\nexport default (theme) => ({\n\troot       : {\n\t\twidth        : '100%',\n\t\tmarginBottom : 0\n\t},\n\tgrow       : {\n\t\tflexGrow : 1\n\t},\n\tmenuButton : {\n\t\tmarginLeft  : -12,\n\t\tmarginRight : 20\n\t},\n\tflag       : {\n\t\tmargin   : '1rem',\n\t\tfontSize : '1.5rem'\n\t},\n\ttitle      : {\n\t\tdisplay                      : 'none',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tdisplay : 'block'\n\t\t}\n\t},\n\tsearch     : {\n\t\tposition                     : 'relative',\n\t\tborderRadius                 : theme.shape.borderRadius,\n\t\tbackgroundColor              : fade(theme.palette.common.white, 0.15),\n\t\t'&:hover'                    : {\n\t\t\tbackgroundColor : fade(theme.palette.common.white, 0.25)\n\t\t},\n\t\tmarginLeft                   : 0,\n\t\twidth                        : '100%',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tmarginLeft : theme.spacing(),\n\t\t\twidth      : 'auto'\n\t\t}\n\t},\n\tsearchIcon : {\n\t\twidth          : theme.spacing(9),\n\t\theight         : '100%',\n\t\tposition       : 'absolute',\n\t\tdisplay        : 'flex',\n\t\talignItems     : 'center',\n\t\tjustifyContent : 'center'\n\t},\n\tinputRoot  : {\n\t\tcolor : 'inherit',\n\t\twidth : '100%'\n\t},\n\tinputInput : {\n\t\tpaddingTop                   : theme.spacing(),\n\t\tpaddingRight                 : theme.spacing(),\n\t\tpaddingBottom                : theme.spacing(),\n\t\tpaddingLeft                  : theme.spacing(10),\n\t\ttransition                   : theme.transitions.create('width'),\n\t\twidth                        : '100%',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth     : 120,\n\t\t\t'&:focus' : {\n\t\t\t\twidth : 200\n\t\t\t}\n\t\t}\n\t}\n});\n","import React, { useContext } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport styles from './styles/FormStyles';\nimport { LanguageContext } from './contexts/LanguageContext';\nimport words from './helpers/words';\n\nexport default withStyles(styles)(function Form(props) {\n\tconst { setLanguage, language } = useContext(LanguageContext);\n\tconst { classes } = props;\n\tconst { email, password, remember, signin } = words[language];\n\treturn (\n\t\t<main className={classes.main}>\n\t\t\t<Paper className={classes.paper}>\n\t\t\t\t<Avatar className={classes.avatar}>\n\t\t\t\t\t<LockOutlinedIcon />\n\t\t\t\t</Avatar>\n\t\t\t\t<Typography variant='h5'>{signin}</Typography>\n\t\t\t\t<Select value={language} onChange={(event) => setLanguage(event.target.value)}>\n\t\t\t\t\t<MenuItem value='english'>English</MenuItem>\n\t\t\t\t\t<MenuItem value='french'>French</MenuItem>\n\t\t\t\t\t<MenuItem value='spanish'>Spanish</MenuItem>\n\t\t\t\t</Select>\n\t\t\t\t<form className={classes.form}>\n\t\t\t\t\t<FormControl margin='normal' required fullWidth>\n\t\t\t\t\t\t<InputLabel htmlFor='email'>{email}</InputLabel>\n\t\t\t\t\t\t<Input id='email' name='email' type='email' autoFocus />\n\t\t\t\t\t</FormControl>\n\t\t\t\t\t<FormControl margin='normal' required fullWidth>\n\t\t\t\t\t\t<InputLabel htmlFor='password'>{password}</InputLabel>\n\t\t\t\t\t\t<Input id='password' name='password' type='password' />\n\t\t\t\t\t</FormControl>\n\t\t\t\t\t<FormControlLabel control={<Checkbox color='primary' />} label={remember} />\n\t\t\t\t\t<Button variant='contained' type='submit' fullWidth color='primary' className={classes.submit}>\n\t\t\t\t\t\t{signin}\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t</Paper>\n\t\t</main>\n\t);\n});\n","export default (theme) => ({\n\tmain   : {\n\t\twidth                        : 'auto',\n\t\tdisplay                      : 'block',\n\t\tmarginLeft                   : theme.spacing(3),\n\t\tmarginRight                  : theme.spacing(3),\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth       : 400,\n\t\t\tmarginLeft  : 'auto',\n\t\t\tmarginRight : 'auto'\n\t\t}\n\t},\n\tpaper  : {\n\t\tmarginTop     : theme.spacing(8),\n\t\tdisplay       : 'flex',\n\t\tflexDirection : 'column',\n\t\talignItems    : 'center',\n\t\tpadding       : `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`\n\t},\n\tavatar : {\n\t\tmargin          : theme.spacing(),\n\t\tbackgroundColor : theme.palette.secondary.main\n\t},\n\tform   : {\n\t\twidth     : '100%',\n\t\tmarginTop : theme.spacing(3)\n\t},\n\tsubmit : {\n\t\tmarginTop : theme.spacing(3)\n\t}\n});","import React, { useContext } from 'react';\r\nimport { ThemeContext } from './contexts/ThemeContext';\r\n\r\nexport default function Page({ children }) {\r\n\tconst { darkMode } = useContext(ThemeContext);\r\n\tconst styles = {\r\n\t\tbackgroundColor : darkMode ? '#222' : '#ececec',\r\n\t\theight          : '100vh',\r\n\t\twidth           : '100vw'\r\n\t};\r\n\treturn <div style={styles}>{children}</div>;\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './helpers/serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport Navbar from './Navbar';\r\nimport Form from './Form';\r\nimport Page from './Page';\r\nimport { ThemeProvider } from './contexts/ThemeContext';\r\nimport { LanguageProvider } from './contexts/LanguageContext';\r\n\r\nexport default function App() {\r\n\treturn (\r\n\t\t<ThemeProvider>\r\n\t\t\t<LanguageProvider>\r\n\t\t\t\t<Page>\r\n\t\t\t\t\t<Navbar />\r\n\t\t\t\t\t<Form />\r\n\t\t\t\t</Page>\r\n\t\t\t</LanguageProvider>\r\n\t\t</ThemeProvider>\r\n\t);\r\n}\r\n"],"sourceRoot":""}